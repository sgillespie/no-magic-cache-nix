
name: Build

on:
  push: {}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Cache Nix
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/nix-binary-cache
          key: ${{ runner.os }}-nix-cache-sgillespie

      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          extra_nix_config: |
            extra-substituters = file://${{ runner.temp }}/nix-binary-cache
            extra-trusted-public-keys = local-cache-1:PrMkzjlx4rG/54500KcEEHoGoGltjMbB+CKiRWGG370=
            require-sigs = true
            post-build-hook = ${{ runner.temp }}/post-build.sh
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Create Nix post build script
        run: |
          cat <<EOF > "${{ runner.temp }}/post-build.sh"
            #!/bin/sh
            set -eux
            set -f         # Disable globbing
            export IFS=' ' # Separate paths by space
            NIX=/nix/var/nix/profiles/default/bin/nix

            echo "Signing paths" \$OUT_PATHS
            $NIX/nix store sign --key-file nix-cache-secret.key --recursive \$OUT_PATHS

            echo "Uploading paths" \$OUT_PATHS
            $NIX/nix copy --to "file://${{ runner.temp }}/nix-binary-cache" \$OUT_PATHS
          EOF

          chmod +x "${{ runner.temp }}/post-build.sh"

          cat "${{ runner.temp }}/post-build.sh"

      - name: Prepopulate Nix Cache
        run: |
          mkdir -p "${{ runner.temp }}/nix-binary-cache/nar"

      - name: Build hello
        run: |
          nix-channel --list
          nix-build --expr '(import <nixpkgs> {}).writeText "example" (builtins.toString builtins.currentTime)'
